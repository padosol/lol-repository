package lol.mmrtr.lolrepository.entity;

import lol.mmrtr.lolrepository.dto.match.ChallengesDto;
import lol.mmrtr.lolrepository.dto.match.MatchDto;
import lol.mmrtr.lolrepository.dto.match.ParticipantDto;
import lombok.Getter;
import lombok.Setter;

@Getter
@Setter
public class Challenges {

    private String puuid;
    private String matchId;
    private int assistStreakCount12;
    private int infernalScalePickup;
    private int abilityUses;
    private int acesBefore15Minutes;
    private int alliedJungleMonsterKills;
    private int baronTakedowns;
    private int blastConeOppositeOpponentCount;
    private int bountyGold;
    private int buffsStolen;
    private int completeSupportQuestInTime;
    private double controlWardTimeCoverageInRiverOrEnemyHalf;
    private int controlWardsPlaced;
    private double damagePerMinute;
    private double damageTakenOnTeamPercentage;
    private int dancedWithRiftHerald;
    private int deathsByEnemyChamps;
    private int dodgeSkillShotsSmallWindow;
    private int doubleAces;
    private int dragonTakedowns;
    private int earlyLaningPhaseGoldExpAdvantage;
    private int effectiveHealAndShielding;
    private int elderDragonKillsWithOpposingSoul;
    private int elderDragonMultikills;
    private int enemyChampionImmobilizations;
    private int enemyJungleMonsterKills;
    private int epicMonsterKillsNearEnemyJungler;
    private int epicMonsterKillsWithin30SecondsOfSpawn;
    private int epicMonsterSteals;
    private int epicMonsterStolenWithoutSmite;
    private int firstTurretKilled;
    private double firstTurretKilledTime;
    private int fistBumpParticipation;
    private int flawlessAces;
    private int fullTeamTakedown;
    private double gameLength;
    private int getTakedownsInAllLanesEarlyJungleAsLaner;
    private double goldPerMinute;
    private int hadOpenNexus;
    private int immobilizeAndKillWithAlly;
    private int initialBuffCount;
    private int initialCrabCount;
    private int jungleCsBefore10Minutes;
    private int junglerTakedownsNearDamagedEpicMonster;
    private int kTurretsDestroyedBeforePlatesFall;
    private double kda;
    private int killAfterHiddenWithAlly;
    private double killParticipation;
    private int killedChampTookFullTeamDamageSurvived;
    private int killingSprees;
    private int killsNearEnemyTurret;
    private int killsOnOtherLanesEarlyJungleAsLaner;
    private int killsOnRecentlyHealedByAramPack;
    private int killsUnderOwnTurret;
    private int killsWithHelpFromEpicMonster;
    private int knockEnemyIntoTeamAndKill;
    private int landSkillShotsEarlyGame;
    private int laneMinionsFirst10Minutes;
    private int laningPhaseGoldExpAdvantage;
    private int legendaryCount;
    private String legendaryItemUsed;
    private int lostAnInhibitor;
    private int maxCsAdvantageOnLaneOpponent;
    private int maxKillDeficit;
    private int maxLevelLeadLaneOpponent;
    private int mejaisFullStackInTime;
    private int moreEnemyJungleThanOpponent;
    private int multiKillOneSpell;
    private int multiTurretRiftHeraldCount;
    private int multikills;
    private int multikillsAfterAggressiveFlash;
    private int outerTurretExecutesBefore10Minutes;
    private int outnumberedKills;
    private int outnumberedNexusKill;
    private int perfectDragonSoulsTaken;
    private int perfectGame;
    private int pickKillWithAlly;
    private int playedChampSelectPosition;
    private int poroExplosions;
    private int quickCleanse;
    private int quickFirstTurret;
    private int quickSoloKills;
    private int riftHeraldTakedowns;
    private int saveAllyFromDeath;
    private int scuttleCrabKills;
    private int skillshotsDodged;
    private int skillshotsHit;
    private int snowballsHit;
    private int soloBaronKills;
    private int soloKills;
    private int stealthWardsPlaced;
    private int survivedSingleDigitHpCount;
    private int survivedThreeImmobilizesInFight;
    private int takedownOnFirstTurret;
    private int takedowns;
    private int takedownsAfterGainingLevelAdvantage;
    private int takedownsBeforeJungleMinionSpawn;
    private int takedownsFirstXMinutes;
    private int takedownsInAlcove;
    private int takedownsInEnemyFountain;
    private int teamBaronKills;
    private double teamDamagePercentage;
    private int teamElderDragonKills;
    private int teamRiftHeraldKills;
    private int tookLargeDamageSurvived;
    private int turretPlatesTaken;
    private int turretTakedowns;
    private int turretsTakenWithRiftHerald;
    private int twentyMinionsIn3SecondsCount;
    private int twoWardsOneSweeperCount;
    private int unseenRecalls;
    private double visionScoreAdvantageLaneOpponent;
    private double visionScorePerMinute;
    private int voidMonsterKill;
    private int wardTakedowns;
    private int wardTakedownsBefore20M;
    private int wardsGuarded;


    public Challenges(){};

    public Challenges(MatchDto matchDto, ParticipantDto participantDto, ChallengesDto challengesDto){

        this.puuid = participantDto.getPuuid();
        this.matchId = matchDto.getMetadata().getMatchId();
        this.assistStreakCount12 = challengesDto.getAssistStreakCount12();
        this.infernalScalePickup = challengesDto.getInfernalScalePickup();
        this.abilityUses = challengesDto.getAbilityUses();
        this.acesBefore15Minutes = challengesDto.getAcesBefore15Minutes();
        this.alliedJungleMonsterKills = challengesDto.getAlliedJungleMonsterKills();
        this.baronTakedowns = challengesDto.getBaronTakedowns();
        this.blastConeOppositeOpponentCount = challengesDto.getBlastConeOppositeOpponentCount();
        this.bountyGold = challengesDto.getBountyGold();
        this.buffsStolen = challengesDto.getBuffsStolen();
        this.completeSupportQuestInTime = challengesDto.getCompleteSupportQuestInTime();
        this.controlWardTimeCoverageInRiverOrEnemyHalf = challengesDto.getControlWardTimeCoverageInRiverOrEnemyHalf();
        this.controlWardsPlaced = challengesDto.getControlWardsPlaced();
        this.damagePerMinute = challengesDto.getDamagePerMinute();
        this.damageTakenOnTeamPercentage = challengesDto.getDamageTakenOnTeamPercentage();
        this.dancedWithRiftHerald = challengesDto.getDancedWithRiftHerald();
        this.deathsByEnemyChamps = challengesDto.getDeathsByEnemyChamps();
        this.dodgeSkillShotsSmallWindow = challengesDto.getDodgeSkillShotsSmallWindow();
        this.doubleAces = challengesDto.getDoubleAces();
        this.dragonTakedowns = challengesDto.getDragonTakedowns();
        this.earlyLaningPhaseGoldExpAdvantage = challengesDto.getEarlyLaningPhaseGoldExpAdvantage();
        this.effectiveHealAndShielding = challengesDto.getEffectiveHealAndShielding();
        this.elderDragonKillsWithOpposingSoul = challengesDto.getElderDragonKillsWithOpposingSoul();
        this.elderDragonMultikills = challengesDto.getElderDragonMultikills();
        this.enemyChampionImmobilizations = challengesDto.getEnemyChampionImmobilizations();
        this.enemyJungleMonsterKills = challengesDto.getEnemyJungleMonsterKills();
        this.epicMonsterKillsNearEnemyJungler = challengesDto.getEpicMonsterKillsNearEnemyJungler();
        this.epicMonsterKillsWithin30SecondsOfSpawn = challengesDto.getEpicMonsterKillsWithin30SecondsOfSpawn();
        this.epicMonsterSteals = challengesDto.getEpicMonsterSteals();
        this.epicMonsterStolenWithoutSmite = challengesDto.getEpicMonsterStolenWithoutSmite();
        this.firstTurretKilled = challengesDto.getFirstTurretKilled();
        this.firstTurretKilledTime = challengesDto.getFirstTurretKilledTime();
        this.fistBumpParticipation = challengesDto.getFistBumpParticipation();
        this.flawlessAces = challengesDto.getFlawlessAces();
        this.fullTeamTakedown = challengesDto.getFullTeamTakedown();
        this.gameLength = challengesDto.getGameLength();
        this.getTakedownsInAllLanesEarlyJungleAsLaner = challengesDto.getGetTakedownsInAllLanesEarlyJungleAsLaner();
        this.goldPerMinute = challengesDto.getGoldPerMinute();
        this.hadOpenNexus = challengesDto.getHadOpenNexus();
        this.immobilizeAndKillWithAlly = challengesDto.getImmobilizeAndKillWithAlly();
        this.initialBuffCount = challengesDto.getInitialBuffCount();
        this.initialCrabCount = challengesDto.getInitialCrabCount();
        this.jungleCsBefore10Minutes = challengesDto.getJungleCsBefore10Minutes();
        this.junglerTakedownsNearDamagedEpicMonster = challengesDto.getJunglerTakedownsNearDamagedEpicMonster();
        this.kTurretsDestroyedBeforePlatesFall = challengesDto.getKTurretsDestroyedBeforePlatesFall();
        this.kda = challengesDto.getKda();
        this.killAfterHiddenWithAlly = challengesDto.getKillAfterHiddenWithAlly();
        this.killParticipation = challengesDto.getKillParticipation();
        this.killedChampTookFullTeamDamageSurvived = challengesDto.getKilledChampTookFullTeamDamageSurvived();
        this.killingSprees = challengesDto.getKillingSprees();
        this.killsNearEnemyTurret = challengesDto.getKillsNearEnemyTurret();
        this.killsOnOtherLanesEarlyJungleAsLaner = challengesDto.getKillsOnOtherLanesEarlyJungleAsLaner();
        this.killsOnRecentlyHealedByAramPack = challengesDto.getKillsOnRecentlyHealedByAramPack();
        this.killsUnderOwnTurret = challengesDto.getKillsUnderOwnTurret();
        this.killsWithHelpFromEpicMonster = challengesDto.getKillsWithHelpFromEpicMonster();
        this.knockEnemyIntoTeamAndKill = challengesDto.getKnockEnemyIntoTeamAndKill();
        this.landSkillShotsEarlyGame = challengesDto.getLandSkillShotsEarlyGame();
        this.laneMinionsFirst10Minutes = challengesDto.getLaneMinionsFirst10Minutes();
        this.laningPhaseGoldExpAdvantage = challengesDto.getLaningPhaseGoldExpAdvantage();
        this.legendaryCount = challengesDto.getLegendaryCount();

        StringBuffer sb = new StringBuffer();
        for (Integer integer : challengesDto.getLegendaryItemUsed()) {
            if(!sb.isEmpty()) {
                sb.append(",");
            }

            sb.append(integer);
        }
        this.legendaryItemUsed = sb.toString();

        this.lostAnInhibitor = challengesDto.getLostAnInhibitor();
        this.maxCsAdvantageOnLaneOpponent = challengesDto.getMaxCsAdvantageOnLaneOpponent();
        this.maxKillDeficit = challengesDto.getMaxKillDeficit();
        this.maxLevelLeadLaneOpponent = challengesDto.getMaxLevelLeadLaneOpponent();
        this.mejaisFullStackInTime = challengesDto.getMejaisFullStackInTime();
        this.moreEnemyJungleThanOpponent = challengesDto.getMoreEnemyJungleThanOpponent();
        this.multiKillOneSpell = challengesDto.getMultiKillOneSpell();
        this.multiTurretRiftHeraldCount = challengesDto.getMultiTurretRiftHeraldCount();
        this.multikills = challengesDto.getMultikills();
        this.multikillsAfterAggressiveFlash = challengesDto.getMultikillsAfterAggressiveFlash();
        this.outerTurretExecutesBefore10Minutes = challengesDto.getOuterTurretExecutesBefore10Minutes();
        this.outnumberedKills = challengesDto.getOutnumberedKills();
        this.outnumberedNexusKill = challengesDto.getOutnumberedNexusKill();
        this.perfectDragonSoulsTaken = challengesDto.getPerfectDragonSoulsTaken();
        this.perfectGame = challengesDto.getPerfectGame();
        this.pickKillWithAlly = challengesDto.getPickKillWithAlly();
        this.playedChampSelectPosition = challengesDto.getPlayedChampSelectPosition();
        this.poroExplosions = challengesDto.getPoroExplosions();
        this.quickCleanse = challengesDto.getQuickCleanse();
        this.quickFirstTurret = challengesDto.getQuickFirstTurret();
        this.quickSoloKills = challengesDto.getQuickSoloKills();
        this.riftHeraldTakedowns = challengesDto.getRiftHeraldTakedowns();
        this.saveAllyFromDeath = challengesDto.getSaveAllyFromDeath();
        this.scuttleCrabKills = challengesDto.getScuttleCrabKills();
        this.skillshotsDodged = challengesDto.getSkillshotsDodged();
        this.skillshotsHit = challengesDto.getSkillshotsHit();
        this.snowballsHit = challengesDto.getSnowballsHit();
        this.soloBaronKills = challengesDto.getSoloBaronKills();
        this.soloKills = challengesDto.getSoloKills();
        this.stealthWardsPlaced = challengesDto.getStealthWardsPlaced();
        this.survivedSingleDigitHpCount = challengesDto.getSurvivedSingleDigitHpCount();
        this.survivedThreeImmobilizesInFight = challengesDto.getSurvivedThreeImmobilizesInFight();
        this.takedownOnFirstTurret = challengesDto.getTakedownOnFirstTurret();
        this.takedowns = challengesDto.getTakedowns();
        this.takedownsAfterGainingLevelAdvantage = challengesDto.getTakedownsAfterGainingLevelAdvantage();
        this.takedownsBeforeJungleMinionSpawn = challengesDto.getTakedownsBeforeJungleMinionSpawn();
        this.takedownsFirstXMinutes = challengesDto.getTakedownsFirstXMinutes();
        this.takedownsInAlcove = challengesDto.getTakedownsInAlcove();
        this.takedownsInEnemyFountain = challengesDto.getTakedownsInEnemyFountain();
        this.teamBaronKills = challengesDto.getTeamBaronKills();
        this.teamDamagePercentage = challengesDto.getTeamDamagePercentage();
        this.teamElderDragonKills = challengesDto.getTeamElderDragonKills();
        this.teamRiftHeraldKills = challengesDto.getTeamRiftHeraldKills();
        this.tookLargeDamageSurvived = challengesDto.getTookLargeDamageSurvived();
        this.turretPlatesTaken = challengesDto.getTurretPlatesTaken();
        this.turretTakedowns = challengesDto.getTurretTakedowns();
        this.turretsTakenWithRiftHerald = challengesDto.getTurretsTakenWithRiftHerald();
        this.twentyMinionsIn3SecondsCount = challengesDto.getTwentyMinionsIn3SecondsCount();
        this.twoWardsOneSweeperCount = challengesDto.getTwoWardsOneSweeperCount();
        this.unseenRecalls = challengesDto.getUnseenRecalls();
        this.visionScoreAdvantageLaneOpponent = challengesDto.getVisionScoreAdvantageLaneOpponent();
        this.visionScorePerMinute = challengesDto.getVisionScorePerMinute();
        this.voidMonsterKill = challengesDto.getVoidMonsterKill();
        this.wardTakedowns = challengesDto.getWardTakedowns();
        this.wardTakedownsBefore20M = challengesDto.getWardTakedownsBefore20M();
        this.wardsGuarded = challengesDto.getWardsGuarded();

    }


}
